# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PasswordGen.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random
import clipboard
import string
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QAction


class Ui_MainWindow(object):
    def CheckBox_Check(self,Length):
        if(self.LowerCase.isChecked())==True and (self.Uppercase.isChecked())==False and (self.Special.isChecked())==False:
                self.password = random.sample(self.small,Length)
                return self.password
        elif (self.LowerCase.isChecked())==False and (self.Uppercase.isChecked())==True and (self.Special.isChecked())==False:
                self.password = random.sample(self.big,Length)
                return self.password
        elif (self.LowerCase.isChecked())==False and (self.Uppercase.isChecked())==False and (self.Special.isChecked())==False:
                self.password = random.sample(self.digits,Length)
                return self.password
        elif (self.LowerCase.isChecked())==False and (self.Uppercase.isChecked())==False and (self.Special.isChecked())==True:
                self.password = random.sample(self.special,Length)
                return self.password
        elif (self.LowerCase.isChecked())==True and (self.Uppercase.isChecked())==True and (self.Special.isChecked())==False:
                self.password = random.sample((self.small+self.big),Length)
                return self.password
        elif (self.LowerCase.isChecked())==True and (self.Uppercase.isChecked())==False and (self.Special.isChecked())==True:
                self.password = random.sample((self.small+self.special),Length)
                return self.password
        elif (self.LowerCase.isChecked())==False and (self.Uppercase.isChecked())==True and (self.Special.isChecked())==True:
                self.password = random.sample((self.big+self.special),Length)
                return self.password  
        else:
                self.password = random.sample(self.combined_all,Length)
                return self.password
    def copied(self):
        clipboard.copy("".join(self.password))
    def Clearit(self):
        self.Output.clear()
    def generate(self):
        self.small = string.ascii_lowercase
        self.big = string.ascii_uppercase
        self.digits = string.digits
        self.special = string.punctuation
        self.combined_all = self.small+self.big+self.digits+self.special
        password_length = self.Length.value()
        password = self.CheckBox_Check(password_length)
        self.Output.setText("".join(password))
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(735, 500)
        MainWindow.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
#Special Characters Checkbox
        self.Special = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Special.setFont(font)
        self.Special.setStyleSheet("QCheckBox{\n"
"border-radius:10px;}")
        self.Special.setObjectName("Special")
        self.gridLayout.addWidget(self.Special, 4, 6, 1, 1)
        self.Special.setChecked(True)
#Length SpinBox
        self.Length = QtWidgets.QSpinBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.Length.setFont(font)
        self.Length.setObjectName("Length")
        self.gridLayout.addWidget(self.Length, 2, 1, 1, 10)
#Output Label
        self.Output = QtWidgets.QLabel(self.centralwidget)
        self.Output.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.Output.setText("")
        self.Output.setObjectName("Output")
        font = QtGui.QFont()
        font.setPointSize(20)  # Change font size here
        self.Output.setFont(font)
        self.gridLayout.addWidget(self.Output, 6, 1, 1, 10)

#Lowercase CheckBox
        self.LowerCase = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LowerCase.setFont(font)
        self.LowerCase.setStyleSheet("QCheckBox{\n"
"border-radius:10px;}")
        self.LowerCase.setObjectName("LowerCase")
        self.gridLayout.addWidget(self.LowerCase, 4, 1, 1, 1)
        self.LowerCase.setChecked(True)
#Length Label
        self.LengthLabe = QtWidgets.QLabel(self.centralwidget)
        self.LengthLabe.setMaximumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.LengthLabe.setFont(font)
        self.LengthLabe.setObjectName("LengthLabe")
        self.gridLayout.addWidget(self.LengthLabe, 2, 0, 1, 1)
#Generate Button
        self.Generate = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.generate())
        self.Generate.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.Generate.setFont(font)
        self.Generate.setStyleSheet("QPushButton{\n"
"\n"
"border-radius:15px;\n"
"}\n"
"QPushButton:hover{\n"
"    \n"
"    color: rgba(255, 255, 0, 220);\n"
"    background-color: rgba(0, 0, 255, 190);\n"
"}\n"
"QPushButton:pressed{\n"
"}\n"
"background-color: rgba(0, 0, 127, 240);")
        self.Generate.setObjectName("Generate")
        self.gridLayout.addWidget(self.Generate, 5, 1, 1, 6)
#Copy to Clipboard Button
        self.Copy = QtWidgets.QPushButton(self.centralwidget,clicked = lambda : self.copied())
        self.Copy.setMaximumSize(QtCore.QSize(150, 50))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Copy.setFont(font)
        self.Copy.setStyleSheet("QPushButton{\n"
"\n"
"border-radius:5px;\n"
"}\n"
"QPushButton:hover{\n"
"    \n"
"    color: rgba(255, 255, 0, 220);\n"
"    background-color: rgba(0, 0, 255, 190);\n"
"}")
        self.Copy.setObjectName("Copy")
        self.gridLayout.addWidget(self.Copy, 7, 6, 1, 1)

#Title Label
        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.Title.setFont(font)
        self.Title.setObjectName("Title")
        self.gridLayout.addWidget(self.Title, 1, 1, 1, 5)

#Uppercase Check Box
        self.Uppercase = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Uppercase.setFont(font)
        self.Uppercase.setStyleSheet("QCheckBox{\n"
"border-radius:10px;}")
        self.Uppercase.setObjectName("Uppercase")
        self.gridLayout.addWidget(self.Uppercase, 4, 3, 1, 1)
        self.Uppercase.setChecked(True)
#Password Label
        self.Passwordlabel = QtWidgets.QLabel(self.centralwidget)
        self.Passwordlabel.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Passwordlabel.setFont(font)
        self.Passwordlabel.setObjectName("Passwordlabel")
        self.gridLayout.addWidget(self.Passwordlabel, 6, 0, 1, 1)
#clear Button
        self.Clear = QtWidgets.QPushButton(self.centralwidget,clicked = lambda: self.Clearit())
        self.Clear.setMaximumSize(QtCore.QSize(150, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Clear.setFont(font)
        self.Clear.setStyleSheet("QPushButton{\n"
"\n"
"border-radius:5px;\n"
"}\n"
"QPushButton:hover{\n"
"    \n"
"    color: rgba(255, 255, 0, 220);\n"
"    background-color: rgba(0, 0, 255, 190);\n"
"}")
        self.Clear.setObjectName("Clear")
        self.gridLayout.addWidget(self.Clear, 7, 7, 1, 3)
        self.horizontalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Special.setText(_translate("MainWindow", "Special Characters"))
        self.LowerCase.setText(_translate("MainWindow", "LowerCase"))
        self.LengthLabe.setText(_translate("MainWindow", "Length:"))
        self.Generate.setText(_translate("MainWindow", "GENERATE"))
        self.Generate.setShortcut(_translate("MainWindow","Return"))
        self.Copy.setText(_translate("MainWindow", "Copy"))
        self.Copy.setShortcut(_translate("MainWindow","Ctrl+C"))
        self.Title.setText(_translate("MainWindow", "PASSWORD GENERATOR"))
        self.Uppercase.setText(_translate("MainWindow", "UpperCase"))
        self.Passwordlabel.setText(_translate("MainWindow", "PASSWORD:"))
        self.Clear.setText(_translate("MainWindow", "Clear"))
        self.Clear.setShortcut(_translate("MainWindow","Del"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
